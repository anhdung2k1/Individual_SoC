module PrimeNumberGenerator_Avalon (
    input wire clk,                  // Clock signal
    input wire reset_n,              // Active-low reset
    input wire [9:0] max,            // Maximum range for primes
    input wire start,                // Start signal
    output reg [31:0] primes [0:255], // Array to store primes
    output reg done                  // Completion flag
);
    integer i, j;
    reg is_prime;

    always @(posedge clk or negedge reset_n) begin
        if (!reset_n) begin
            done <= 0;
            for (i = 0; i < 256; i = i + 1) primes[i] <= 0;
        end else if (start) begin
            done <= 0;
            j = 0;
            for (i = 2; i <= max; i = i + 1) begin
                is_prime = 1;
                for (j = 2; j * j <= i; j = j + 1) begin
                    if (i % j == 0) begin
                        is_prime = 0;
                        break;
                    end
                end
                if (is_prime) begin
                    primes[j] <= i;
                    j = j + 1;
                end
            end
            done <= 1;
        end
    end
endmodule